<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>profile</title>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
</head>
<body>
    <h2>프로필 페이지</h2>
    
    <div class="file-upload-bpx">
        <form name="update">
            <label for="id">아이디 : </label>
            <input type="text" name="uid" id="id" required><br/>
            
            <label for="pw">비밀번호 : </label>
            <input type="password" name="pw" id="pw" required><br/>
            <label for="pw2">비밀번호 확인 : </label>
            <input type="password" name="pw2" id="pw2" required><br/>

            <label for="name">이름 : </label>
            <input type="text" name="name" id="name" required><br/>
        </form>

        <br/>
        <button type="button" onclick="profileUpdate()">수정</button>
        <button type="button" onclick="userDelete()">회원탈퇴</button>
        <button type="button" onclick="logout()">로그아웃</button>
    </div>
    
    <script>

        window.addEventListener("load", (e)=> {
            getProfile();
        })
        async function getProfile () {

            const userid = await  window.localStorage.getItem('userid');

            if (!userid || userid === '' || userid === undefined) {
                
                alert('다시 로그인해주세요.');
                window.localStorage.removeItem('userid');
                return window.location.href = '/user/signin';
            }

            const form = document.forms['update'];

            const res = await axios({
                method:'GET',  
                url:`/user/getUser?userid=${userid}`,
            })  

            if (res.data && res.data.resultcode === '20') {
                form.uid.value = res.data.user.userid;
                form.pw.value = res.data.user.pw;
                form.name.value = res.data.user.name;
            } else {

                alert('잠시 후 시도 해주세요.')
                return window.location.href = '/user/signin';
            }
        }

        async function profileUpdate () {

            if (!confirm('수정 하시겠습니까?')) return;

            
            let updateData = {};
            const beforid = await  window.localStorage.getItem('userid');
            updateData.id = beforid;

            const form = document.forms['update'];
            // 비밀번호도 변경하는 경우
            if (form.pw2.value != "" ) {

                if( form.pw2.value === form.pw.value ) {
                    updateData.pw = form.pw.value;
                
                } else {
                    return alert('비밀번호 확인해주세요.');
                }
            }

            updateData.userid = form.uid.value;
            updateData.name = form.name.value;

            const res = await axios({
                method:'PATCH',  
                url:`/user/updateUser`,
                data : updateData
            })  
            if (res.data && res.data.resultcode === '20') {

                await  window.localStorage.setItem('userid',`${res.data.user.userid}`);
                alert('수정을 완료하였습니다.');
                window.location.reload();
            } else {
                alert('잠시 후 시도 해주세요.')
            }
        }

        async function userDelete () {

            if (!confirm('회원 탈퇴 하시겠습니까?')) return;

            const form = document.forms['update'];
            const res = await axios({
                method:'DELETE',  
                url:`/user/deleteUser`,
                data : {
                    userid:form.uid.value
                }
            })  

            if (res.data && res.data.resultcode === '20') {
                alert('이용해주셔서 감사합니다.')
                return window.location.href = '/';

            } else {
                return alert('잠시 후 시도 해주세요.')
            }

        }

        function logout () {

            if (!confirm('로그아웃 하시겠습니까?')) return;

            alert('로그아웃 되었습니다.');
            window.localStorage.removeItem('userid');
            return window.location.href = '/user/signin';

        }

    </script>
</body>
</html>